From c5386affcf6dadfd91e2d52310222ed985af9009 Mon Sep 17 00:00:00 2001
From: Dan Ruelas-Petrisko <petrisko@cs.washington.edu>
Date: Sun, 3 Aug 2025 16:52:01 -0700
Subject: [PATCH 2/4] Adding decomp script

---
 scripts/py/bsg_mem_decomp.py | 49 ++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)
 create mode 100644 scripts/py/bsg_mem_decomp.py

diff --git a/scripts/py/bsg_mem_decomp.py b/scripts/py/bsg_mem_decomp.py
new file mode 100644
index 0000000..3163207
--- /dev/null
+++ b/scripts/py/bsg_mem_decomp.py
@@ -0,0 +1,49 @@
+import re
+import sys
+
+bsg_mem_patterns = [
+    r"^( *bsg_mem_3r1w_sync)_width_p(\d+)_els_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_2r1w_sync)_width_p(\d+)_els_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_1r1w_sync)_width_p(\d+)_els_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_1r1w_sync_mask_write_bit)_width_p(\d+)_els_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_1r1w_sync_mask_write_byte)_els_p(\d+)_width_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_1rw_sync_mask_write_bit)_width_p(\d+)_els_p(\d+)(?:_latch_last_read_p(\d+))?",
+    r"^( *bsg_mem_1rw_sync_mask_write_byte)_els_p(\d+)_data_width_p(\d+)(?:_latch_last_read_p(\d+))?",
+]
+
+def repl(match):
+    definition = match.group(0)
+    module = match.group(1)
+    width = match.group(2)
+    els = match.group(3)
+    latch_last_read = match.group(4)
+
+    result  = f"// Autogenerated: DO NOT MODIFY (BEGIN)\n"
+    result += f"//{definition}\n"
+    result += f"{module} #(.els_p({els})"
+    if width is not None:
+        result += f",.width_p({width})"
+    if latch_last_read is not None:
+        result += f",.latch_last_read_p({latch_last_read})"
+    result += f")\n"
+    result += f"// Autogenerated: DO NOT MODIFY (END)\n"
+
+    return result
+
+def process_file(input_file, output_file):
+    with open(input_file, "r") as f:
+        contents = f.read()
+        for p in bsg_mem_patterns:
+            contents = re.sub(p, repl, contents, flags=re.MULTILINE)
+
+    with open(output_file, "w") as f:
+        f.write(contents)
+
+if __name__ == "__main__":
+    if len(sys.argv) < 2:
+        print(f"Usage: python extract.py input.sv2v.v output.pp.sv")
+    else:
+        input_file = sys.argv[1]
+        output_file = sys.argv[2]
+        process_file(input_file, output_file)
+
-- 
2.18.4

