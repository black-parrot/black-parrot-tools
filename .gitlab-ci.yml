
# Include common GitLab CI macros
include: '.gitlab-ci.common.yml'

###################################################
## mixins
###################################################
.project_mixin:
  variables:
    # template variables
    REPO_NAME: "black-parrot-tools"
    DOCKER_PLATFORM: "setme"
    CONTAINER_IMAGE: "${REGISTRY_IMAGE}:${DOCKER_PLATFORM}"
    # used internally
    TOOLS_ARTIFACT: "install-${TOOL}"
    TOOLS_WILDCARD: "install-*"
    TOOLS_PACKAGE: "tools-${DOCKER_PLATFORM}"
    # exported to make sure things go in the right place
    BP_WORK_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-work"
    BP_INSTALL_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-install"

.project_anchors:
  .all_platforms: &all_platforms
    DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
  .default_platform: &default_platform
    DOCKER_PLATFORM: ["centos7"]
  .init: &init_script
    - echo "[CI] Initializing ${REPO_NAME}"
    - JOB_COMMON_ROOT="${COMMONDIR}/${CI_PIPELINE_ID}/${DOCKER_PLATFORM}"
    - mkdir -p ${JOB_COMMON_ROOT}
    - COMMON_INSTALL_DIR="${JOB_COMMON_ROOT}/$(basename ${BP_INSTALL_DIR})"

###################################################
## templates
###################################################

.image_job:
  extends: [.docker_template, .project_mixin]
  script:
    - echo "[CI] building image ${CONTAINER_IMAGE}" | tee -a ${JOB_LOG}
    - docker build docker -f docker/Dockerfile.${DOCKER_PLATFORM}
        --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CONTAINER_IMAGE}
        --build-arg USER_NAME="${USER_NAME}"
        --build-arg USER_ID="${USER_ID}"
        --build-arg GROUP_NAME="${GROUP_NAME}"
        --build-arg GROUP_ID="${GROUP_ID}"
        --build-arg OTHER_GROUPS="${OTHER_GROUPS}"
        -t ${CONTAINER_IMAGE} 2>&1
  rules:
    - if: $DOCKERFILE_FORCE
      when: always
    - if: $DOCKERFILE_NEVER
      when: never
    - changes:
        paths:
          # variable expansion of DOCKER_PLATFORM doesn't seem to work here
          - docker/Dockerfile.*
          - docker/entrypoint.*
          - docker/requirements.txt

.build_job:
  extends: [.repo_template, .project_mixin]
  variables:
    TOOL: "setme"
  script:
    - !reference [.project_anchors, .init]
    - echo "[CI] doing makefile checkout" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} checkout >> ${JOB_LOG} 2>&1
    - echo "[CI] repatching ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} repatch.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] rebuilding ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} rebuild.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] moving installation directory to build output" | tee -a ${JOB_LOG}
    - mv ${BP_INSTALL_DIR} ${JOB_SUCCESS_ROOT}/${TOOLS_ARTIFACT}

.scatter_job:
  extends: [.upload_template, .project_mixin]
  variables:
    # template variables
    API_WILDCARD: "${TOOLS_WILDCARD}"
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${COMMIT_REF_SLUG}"
  script:
    - !reference [.project_anchors, .init]
    - echo "[CI] scattering tools" | tee -a ${JOB_LOG}

.gather_job:
  extends: [.download_template, .project_mixin]
  variables:
    # template variables
    API_WILDCARD: "${TOOLS_PACKAGE}"
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${COMMIT_REF_SLUG}"
  script:
    - !reference [.project_anchors, .init]
    - echo "[CI] gathering tools" | tee -a ${JOB_LOG}
    - mv ${JOB_DEPS_ROOT}/${API_PACKAGE_NAME} ${COMMON_INSTALL_DIR}

.smoke_job:
  extends: [.repo_template, .project_mixin]
  variables:
    TOOL: "setme"
    RUN_SCRIPT: "./ci/common/run-ci.sh"
    SMOKE_SCRIPT: "./ci/smoke-${TOOL}.sh"
  script:
    - !reference [.project_anchors, .init]
    - echo "[CI] running script for ${SMOKE_SCRIPT}" | tee -a ${JOB_LOG}
    - ln -nsf ${COMMON_INSTALL_DIR} ${BP_INSTALL_DIR}
    - ${RUN_SCRIPT} ${SMOKE_SCRIPT}

###################################################
## Actual Jobs
###################################################

# We couple dependencies here while we wait for this feature
# https://gitlab.com/gitlab-org/gitlab/-/issues/423456
# needs:
#  parallel:
#    matrix:
#      - DOCKER_PLATFORM: $DOCKER_PLATFORM

build-image:
  extends: [.image_job]
  parallel:
    matrix:
      - <<: *all_platforms
  needs: []

build-tools:
  extends: [.build_job]
  parallel:
    matrix:
      - <<: *all_platforms
        TOOL: ["verilator", "dromajo"]
      - <<: *all_platforms
        TOOL: ["spike", "surelog", "yosys", "axe"]
      - <<: *all_platforms
        TOOL: ["yslang", "bsg_sv2v", "bsg_fakeram"]
  needs: [{job: build-image, optional: true}]

scatter-tools:
  extends: [.scatter_job]
  parallel:
    matrix:
      - <<: *all_platforms
  needs: [{job: build-tools}]

gather-tools:
  extends: [.gather_job]
  parallel:
    matrix:
      - <<: *all_platforms
  needs: [{job: scatter-tools, optional: true}]

smoke-tools:
  extends: [.smoke_job]
  parallel:
    matrix:
      - <<: *all_platforms
        TOOL: ["verilator", "dromajo"]
      - <<: *all_platforms
        TOOL: ["spike", "surelog", "yosys", "axe"]
  needs: [{job: gather-tools}]

