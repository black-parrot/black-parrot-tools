
# Include common GitLab CI macros
include: '.gitlab-ci.common.yml'

###################################################
## mixins
###################################################
.bp_tools_mixin:
  variables:
    REPO_NAME: "black-parrot-tools"
    # template variables
    DOCKER_PLATFORM: "setme"
    CONTAINER_IMAGE: "${REGISTRY_IMAGE}:${DOCKER_PLATFORM}"
    # used internally
    TOOLS_PACKAGE: "tools-${DOCKER_PLATFORM}"
    TOOLS_INSTALL_TAG: "${TOOLS_PACKAGE}-install"
    TOOLS_ARTIFACT: "${TOOLS_INSTALL_TAG}-${TOOL}"
    TOOLS_WILDCARD: "${TOOLS_INSTALL_TAG}-*"
    # exported to make sure things go in the right place
    BP_WORK_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-work"
    BP_INSTALL_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-install"

###################################################
## templates
###################################################

.image_job:
  extends: [.docker_template, .bp_tools_mixin]
  script:
    - echo "[CI] building image ${CONTAINER_IMAGE}" | tee -a ${JOB_LOG}
    - docker build docker -f docker/Dockerfile.${DOCKER_PLATFORM}
        --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CONTAINER_IMAGE}
        --build-arg USER_NAME="${USER_NAME}"
        --build-arg USER_ID="${USER_ID}"
        --build-arg GROUP_NAME="${GROUP_NAME}"
        --build-arg GROUP_ID="${GROUP_ID}"
        --build-arg OTHER_GROUPS="${OTHER_GROUPS}"
        -t ${CONTAINER_IMAGE} >> ${JOB_LOG} 2>&1
  rules:
    - !reference [.docker_template, rules]
    - changes:
        paths:
          # variable expansion of DOCKER_PLATFORM doesn't seem to work here
          - docker/Dockerfile.*
          - docker/entrypoint.*
          - docker/requirements.txt

.build_job:
  extends: [.repo_template, .bp_tools_mixin]
  variables:
    TOOL: "setme"
  script:
    - echo "[CI] doing makefile checkout" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} checkout >> ${JOB_LOG} 2>&1
    - echo "[CI] repatching ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} repatch.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] rebuilding ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${CORES_PER_JOB} rebuild.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] moving installation directory to build output" | tee -a ${JOB_LOG}
    - mv ${BP_INSTALL_DIR} ${JOB_SUCCESS_ROOT}/${TOOLS_ARTIFACT}
  rules: !reference [.repo_template, rules]

.scatter_job:
  extends: [.upload_template, .bp_tools_mixin]
  variables:
    # template variables
    API_WILDCARD: "${TOOLS_WILDCARD}"
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${COMMIT_REF_SLUG}"
  script:
    - echo "[CI] publishing to url ${API_CURL_URL}" | tee -a ${JOB_LOG}
    - mv ${JOB_DEPS_ROOT}/${TOOLS_WILDCARD} ${JOB_SUCCESS_ROOT}/
  rules: !reference [.upload_template, rules]

.gather_job:
  extends: [.download_template, .bp_tools_mixin]
  variables:
    # template variables
    API_WILDCARD: "${TOOLS_PACKAGE}"
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${COMMIT_REF_SLUG}"
  script:
    - echo "[CI] downloaded from url ${API_CURL_URL}" | tee -a ${JOB_LOG}
    - mv ${JOB_DEPS_ROOT}/${TOOLS_PACKAGE} ${JOB_COMMON_ROOT}/$(basename ${BP_INSTALL_DIR})
  rules: !reference [.download_template, rules]

.smoke_job:
  extends: [.repo_template, .bp_tools_mixin]
  variables:
    TOOL: "setme"
  script:
    - ln -nsf ${JOB_COMMON_ROOT}/$(basename ${BP_INSTALL_DIR}) ${BP_INSTALL_DIR}
    - SMOKE_SCRIPT="./ci/smoke-${TOOL}.sh"
    - echo "[CI] running script for ${SMOKE_SCRIPT}" | tee -a ${JOB_LOG}
    - ./ci/common/run-ci.sh ${SMOKE_SCRIPT}
  rules: !reference [.repo_template, rules]

###################################################
## Actual Jobs
###################################################

# We couple dependencies here while we wait for this feature
# https://gitlab.com/gitlab-org/gitlab/-/issues/423456
# needs:
#  parallel:
#    matrix:
#      - DOCKER_PLATFORM: $DOCKER_PLATFORM

image-tools:
  extends: [.image_job]
  parallel:
    matrix:
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
  needs: []
  rules: !reference [.image_job, rules]

build-tools:
  extends: [.build_job]
  parallel:
    matrix:
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["verilator", "dromajo"]
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["spike", "surelog", "yosys", "axe"]
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["yslang", "bsg_sv2v", "bsg_fakeram"]
  needs: [{job: image-docker, optional: true}]
  rules: !reference [.build_job, rules]

scatter-tools:
  extends: [.scatter_job]
  parallel:
    matrix:
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
  needs: [{job: build-tools}]
  rules: !reference [.scatter_job, rules]

gather-tools:
  extends: [.gather_job]
  parallel:
    matrix:
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
  needs: [{job: scatter-tools, optional: true}]
  rules: !reference [.gather_job, rules]

smoke-tools:
  extends: [.smoke_job]
  parallel:
    matrix:
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["verilator"]
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["verilator", "dromajo"]
      - DOCKER_PLATFORM: ["centos7", "ubuntu24.04"]
        TOOL: ["spike", "surelog", "yosys", "axe"]
  needs: [{job: gather-tools}]
  rules: !reference [.smoke_job, rules]

