
include: '.gitlab-ci.common.yml'

###################################################
## project definition
###################################################

.project_template:
  extends: [.job_template]
  image: $CONTAINER_IMAGE
  variables:
    # used internally
    TOOLS_ARTIFACT: "install-${TOOL}"
    TOOLS_WILDCARD: "install-*"
    TOOLS_PACKAGE: "tools-${DOCKER_PLATFORM}"
    # exported to make sure things go in the right place
    BP_WORK_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-work"
    BP_INSTALL_DIR: "${PROJECT_DIR}/${JOB_WORK_ROOT}/bp-tools-install"
  before_script:
    - !reference [.job_template, before_script]
    - COMMON_INSTALL_DIR="${JOB_COMMON_ROOT}/$(basename ${BP_INSTALL_DIR})"
    - echo "[CI] Initializing common mount @ ${COMMON_INSTALL_DIR}"
    - mkdir -p ${COMMON_INSTALL_DIR} && ls ${COMMON_INSTALL_DIR}

###################################################
## job templates
###################################################
.build_image_job:
  extends: [.project_template, .docker_mixin]
  script:
    - docker build docker -f docker/Dockerfile.${DOCKER_PLATFORM}
        --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CONTAINER_IMAGE}
        --build-arg USER_NAME="${BSG_CI_USER_NAME}"
        --build-arg USER_ID="${BSG_CI_USER_ID}"
        --build-arg GROUP_NAME="${BSG_CI_GROUP_NAME}"
        --build-arg GROUP_ID="${BSG_CI_GROUP_ID}"
        --build-arg OTHER_GROUPS="${BSG_CI_OTHER_GROUPS}"
        -t ${CONTAINER_IMAGE}
  rules:
    - changes:
        paths:
          - docker/Dockerfile.$DOCKER_PLATFORM
          - docker/entrypoint.$DOCKER_PLATFORM.sh
          - docker/requirements.txt


.build_tools_job:
  extends: [.project_template]
  variables:
    TOOL: "setme"
  script:
    - echo "[CI] doing makefile checkout"
    - make -j${BSG_CI_CORES_PER_JOB} checkout >> ${JOB_LOG} 2>&1
    - echo "[CI] patching ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${BSG_CI_CORES_PER_JOB} repatch.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] building ${TOOL}" | tee -a ${JOB_LOG}
    - make -j${BSG_CI_CORES_PER_JOB} rebuild.${TOOL} >> ${JOB_LOG} 2>&1
    - echo "[CI] moving installation directory to build output" | tee -a ${JOB_LOG}
    - mv ${BP_INSTALL_DIR} ${JOB_SUCCESS_ROOT}/${TOOLS_ARTIFACT}

.scatter_tools_job:
  extends: [.project_template, .api_mixin]
  variables:
    # template variables
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${CI_COMMIT_REF_SLUG}"
    API_PROJECT_ID: "${CI_PROJECT_ID}"
  script:
    - echo "[CI] gathering inputs for ${API_PACKAGE_NAME}" | tee -a ${JOB_LOG}
    - mkdir -p ${API_UPLOAD_ROOT}
    - find ${JOB_DEPS_ROOT} -maxdepth 1 -type d -name ${TOOLS_WILDCARD}
        -exec rsync --remove-source-files -a {}/ ${API_UPLOAD_ROOT} \;
    - !reference [.api_anchors, api_upload]

.gather_tools_job:
  extends: [.project_template, .api_mixin]
  variables:
    # template variables
    API_PACKAGE_NAME: "${TOOLS_PACKAGE}"
    API_PACKAGE_VER: "${CI_COMMIT_REF_SLUG}"
    API_PROJECT_ID: "${CI_PROJECT_ID}"
  script:
    - echo "[CI] scattering outputs for ${API_PACKAGE_NAME}" | tee -a ${JOB_LOG}
    - !reference [.api_anchors, api_download]
    - mv ${API_DOWNLOAD_ROOT}/* ${COMMON_INSTALL_DIR}

.smoke_tools_job:
  extends: [.project_template]
  variables:
    TOOL: "setme"
    RUN_SCRIPT: "./ci/common/run-ci.sh"
    SMOKE_SCRIPT: "./ci/smoke-${TOOL}.sh"
  script:
    - echo "[CI] running script for ${SMOKE_SCRIPT}" | tee -a ${JOB_LOG}
    - ln -nsf ${COMMON_INSTALL_DIR} ${BP_INSTALL_DIR}
    - ${RUN_SCRIPT} ${SMOKE_SCRIPT}

###################################################
## Actual Jobs
###################################################

build-image:
  extends: [.build_image_job]

build-tools:
  extends: [.build_tools_job]
  parallel:
    matrix:
      - TOOL: ["verilator", "dromajo"]
      - TOOL: ["spike", "surelog", "yosys", "axe"]
      - TOOL: ["yslang", "bsg_sv2v", "bsg_fakeram"]
  needs: [{job: build-image, optional: true}]

scatter-tools:
  extends: [.scatter_tools_job]
  needs: [build-tools]

gather-tools:
  extends: [.gather_tools_job]
  needs: [scatter-tools]

smoke-tools:
  extends: [.smoke_tools_job]
  needs: [gather-tools]
  parallel:
    matrix:
      - TOOL: ["verilator", "dromajo"]
      - TOOL: ["spike", "surelog", "yosys", "axe"]

